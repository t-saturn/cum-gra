syntax = "proto3";
package module_role_permission;
option go_package = "server/pb/module_role_permission;modulerolepermissionpb";
import "google/protobuf/timestamp.proto";

// ModuleRolePermission model
message ModuleRolePermission {
  string id = 1;
  string module_id = 2;
  string application_role_id = 3;
  PermissionType permission_type = 4;
  google.protobuf.Timestamp created_at = 5;
  bool is_deleted = 6;
  google.protobuf.Timestamp deleted_at = 7;
  string deleted_by = 8;
}

// Permission type enum
enum PermissionType {
  PERMISSION_TYPE_UNSPECIFIED = 0;
  PERMISSION_TYPE_DENIED = 1;
  PERMISSION_TYPE_READ = 2;
  PERMISSION_TYPE_WRITE = 3;
  PERMISSION_TYPE_ADMIN = 4;
}

// Request messages
message CreateModuleRolePermissionRequest {
  string module_id = 1;
  string application_role_id = 2;
  PermissionType permission_type = 3;
}

message GetModuleRolePermissionRequest {
  string id = 1;
}

message GetModuleRolePermissionsByModuleRequest {
  string module_id = 1;
  bool include_deleted = 2;
}

message GetModuleRolePermissionsByRoleRequest {
  string application_role_id = 1;
  bool include_deleted = 2;
}

message UpdateModuleRolePermissionRequest {
  string id = 1;
  PermissionType permission_type = 2;
}

message DeleteModuleRolePermissionRequest {
  string id = 1;
  string deleted_by = 2;
}

message ListModuleRolePermissionsRequest {
  int32 page = 1;
  int32 page_size = 2;
  string module_id = 3;
  string application_role_id = 4;
  PermissionType permission_type = 5;
  bool include_deleted = 6;
}

message BulkCreateModuleRolePermissionsRequest {
  repeated CreateModuleRolePermissionRequest permissions = 1;
}

message BulkUpdateModuleRolePermissionsRequest {
  string application_role_id = 1;
  repeated ModulePermissionUpdate permissions = 2;
}

message ModulePermissionUpdate {
  string module_id = 1;
  PermissionType permission_type = 2;
}

message CheckPermissionRequest {
  string module_id = 1;
  string application_role_id = 2;
}

// Response messages
message CreateModuleRolePermissionResponse {
  ModuleRolePermission permission = 1;
  string message = 2;
}

message GetModuleRolePermissionResponse {
  ModuleRolePermission permission = 1;
}

message UpdateModuleRolePermissionResponse {
  ModuleRolePermission permission = 1;
  string message = 2;
}

message DeleteModuleRolePermissionResponse {
  string message = 1;
}

message ListModuleRolePermissionsResponse {
  repeated ModuleRolePermission permissions = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message GetModuleRolePermissionsByModuleResponse {
  repeated ModuleRolePermission permissions = 1;
}

message GetModuleRolePermissionsByRoleResponse {
  repeated ModuleRolePermission permissions = 1;
}

message BulkCreateModuleRolePermissionsResponse {
  repeated ModuleRolePermission permissions = 1;
  string message = 2;
}

message BulkUpdateModuleRolePermissionsResponse {
  repeated ModuleRolePermission permissions = 1;
  string message = 2;
}

message CheckPermissionResponse {
  bool has_permission = 1;
  PermissionType permission_type = 2;
}

// ModuleRolePermission service
service ModuleRolePermissionService {
  rpc CreateModuleRolePermission(CreateModuleRolePermissionRequest) returns (CreateModuleRolePermissionResponse);
  rpc GetModuleRolePermission(GetModuleRolePermissionRequest) returns (GetModuleRolePermissionResponse);
  rpc GetModuleRolePermissionsByModule(GetModuleRolePermissionsByModuleRequest) returns (GetModuleRolePermissionsByModuleResponse);
  rpc GetModuleRolePermissionsByRole(GetModuleRolePermissionsByRoleRequest) returns (GetModuleRolePermissionsByRoleResponse);
  rpc UpdateModuleRolePermission(UpdateModuleRolePermissionRequest) returns (UpdateModuleRolePermissionResponse);
  rpc DeleteModuleRolePermission(DeleteModuleRolePermissionRequest) returns (DeleteModuleRolePermissionResponse);
  rpc ListModuleRolePermissions(ListModuleRolePermissionsRequest) returns (ListModuleRolePermissionsResponse);
  rpc BulkCreateModuleRolePermissions(BulkCreateModuleRolePermissionsRequest) returns (BulkCreateModuleRolePermissionsResponse);
  rpc BulkUpdateModuleRolePermissions(BulkUpdateModuleRolePermissionsRequest) returns (BulkUpdateModuleRolePermissionsResponse);
  rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse);
}
