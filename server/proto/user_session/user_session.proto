syntax = "proto3";
package user_sessions;
option go_package = "server/pb/user_sessions;user_sessionspb";
import "google/protobuf/timestamp.proto";

// UserSession model
message UserSession {
  string id = 1;
  string user_id = 2;
  string session_token = 3;
  string refresh_token = 4;
  string device_info = 5;
  string ip_address = 6;
  string user_agent = 7;
  bool is_active = 8;
  google.protobuf.Timestamp expires_at = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp last_activity_at = 11;
  bool is_deleted = 12;
  google.protobuf.Timestamp deleted_at = 13;
}

// Request messages
message CreateUserSessionRequest {
  string user_id = 1;
  string session_token = 2;
  string refresh_token = 3;
  string device_info = 4;
  string ip_address = 5;
  string user_agent = 6;
  google.protobuf.Timestamp expires_at = 7;
}

message GetUserSessionRequest {
  string id = 1;
}

message GetUserSessionByTokenRequest {
  string session_token = 1;
}

message UpdateUserSessionRequest {
  string id = 1;
  string device_info = 2;
  string ip_address = 3;
  string user_agent = 4;
  bool is_active = 5;
  google.protobuf.Timestamp expires_at = 6;
}

message DeleteUserSessionRequest {
  string id = 1;
}

message ListUserSessionsRequest {
  int32 page = 1;
  int32 page_size = 2;
  string user_id = 3;
  bool is_active = 4;
  bool include_deleted = 5;
}

message RefreshSessionRequest {
  string refresh_token = 1;
  string new_session_token = 2;
  string new_refresh_token = 3;
  google.protobuf.Timestamp new_expires_at = 4;
}

message UpdateLastActivityRequest {
  string id = 1;
}

message RevokeUserSessionRequest {
  string id = 1;
}

message RevokeAllUserSessionsRequest {
  string user_id = 1;
}

message ValidateSessionRequest {
  string session_token = 1;
}

// Response messages
message CreateUserSessionResponse {
  UserSession user_session = 1;
  string message = 2;
}

message GetUserSessionResponse {
  UserSession user_session = 1;
}

message UpdateUserSessionResponse {
  UserSession user_session = 1;
  string message = 2;
}

message DeleteUserSessionResponse {
  string message = 1;
}

message ListUserSessionsResponse {
  repeated UserSession user_sessions = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message RefreshSessionResponse {
  UserSession user_session = 1;
  string message = 2;
}

message UpdateLastActivityResponse {
  string message = 1;
}

message RevokeUserSessionResponse {
  string message = 1;
}

message RevokeAllUserSessionsResponse {
  string message = 1;
}

message ValidateSessionResponse {
  bool is_valid = 1;
  UserSession user_session = 2;
  string message = 3;
}

// UserSession service
service UserSessionService {
  rpc CreateUserSession(CreateUserSessionRequest) returns (CreateUserSessionResponse);
  rpc GetUserSession(GetUserSessionRequest) returns (GetUserSessionResponse);
  rpc GetUserSessionByToken(GetUserSessionByTokenRequest) returns (GetUserSessionResponse);
  rpc UpdateUserSession(UpdateUserSessionRequest) returns (UpdateUserSessionResponse);
  rpc DeleteUserSession(DeleteUserSessionRequest) returns (DeleteUserSessionResponse);
  rpc ListUserSessions(ListUserSessionsRequest) returns (ListUserSessionsResponse);
  rpc RefreshSession(RefreshSessionRequest) returns (RefreshSessionResponse);
  rpc UpdateLastActivity(UpdateLastActivityRequest) returns (UpdateLastActivityResponse);
  rpc RevokeUserSession(RevokeUserSessionRequest) returns (RevokeUserSessionResponse);
  rpc RevokeAllUserSessions(RevokeAllUserSessionsRequest) returns (RevokeAllUserSessionsResponse);
  rpc ValidateSession(ValidateSessionRequest) returns (ValidateSessionResponse);
}
